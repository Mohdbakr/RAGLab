name: RAGLab
services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.4.17
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"
    
  attu:
    container_name: milvus-attu
    image: zilliz/attu:v2.4
    environment:
      MILVUS_URL: milvus:19530
    ports:
      - "8080:3000"
    depends_on:
      - milvus
    networks:
      - default

  backend:
    build: ./RAGLab_BE
    env_file:
      - ./RAGLab_BE/.env
    container_name: rag_lab_backend
    ports:
      - "8000:80"
    command: uvicorn app.main:app --host 0.0.0.0 --port 80 --reload
    depends_on:
      - milvus
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/app:/app/api_data

# for this to work use his command docker compose up --watch 
    develop:
      watch:
        - action: sync
          path: ./RAGLab_BE
          target: /app
          ignore:
            - .venv/
        - action: rebuild
          path: ./RAGLab_BE/pyproject.toml/

  frontend:
    build: ./RAGLab_FE
    env_file:
      - /RAGLab_FE/.env
    container_name: rag_lab_frontend
    command: streamlit run app.py --server.port 8501
    depends_on:
      - backend
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/RAGLab_FE:/app/frontend_files
    ports:
      - 8501:8501
    networks:
      - default
    develop:
      watch:
        - action: sync
          path: ./RAGLab_FE
          target: /app
          ignore:
            - .venv/
        - action: rebuild
          path: ./RAGLab_FE/pyproject.toml/

networks:
  default:
    name: RAGLab